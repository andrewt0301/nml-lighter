LET=1
TYPE=2
MEM=3
REG=4
VAR=5
ALIAS=6
MODE=7
OP=8
PSEUDO=9
INTERNAL=10
LABEL=11
STRUCT=12
SYNTAX=13
IMAGE=14
ACTION=15
BOOL=16
CARD=17
FIX=18
FLOAT=19
INT=20
ENUM=21
WS=22
BLOCK_COMMENT=23
LINE_COMMENT=24
LPAREN=25
RPAREN=26
LBRACE=27
RBRACE=28
LBRACK=29
RBRACK=30
SEMI=31
COMMA=32
DOT=33
QOAT=34
ASSIGN=35
PLUS=36
MINUS=37
MUL=38
DIV=39
REM=40
DOUBLE_STAR=41
LEFT_SHIFT=42
RIGHT_SHIFT=43
ROTATE_LEFT=44
ROTATE_RIGHT=45
LE=46
GRE=47
LEQ=48
GREQ=49
EQ=50
NEQ=51
NOT=52
IF=53
THEN=54
ELSE=55
ENDIF=56
AND=57
OR=58
TILDE=59
AMPER=60
UP_ARROW=61
VERT_BAR=62
DOUBLE_DOT=63
TRIPLE_DOT=64
DOUBLE_COLON=65
COLON=66
IS_TYPE=67
TYPE_OF=68
SIZE_OF=69
SQRT=70
ROUND=71
IS_NAN=72
IS_SIGN_NAN=73
SIGN_EXTEND=74
ZERO_EXTEND=75
COERCE=76
CAST=77
INT_TO_FLOAT=78
FLOAT_TO_INT=79
FLOAT_TO_FLOAT=80
FORMAT=81
TRACE=82
EXCEPTION=83
MARK=84
UNPREDICTED=85
UNDEFINED=86
ASSERT=87
FUNCTION=88
SHARED=89
REVISION=90
STRING_LITERAL=91
ID=92
NUMBER_LITERAL=93
DECIMAL_LITERAL=94
HEX_LITERAL=95
BINARY_LITERAL=96
REV=97
ELIF=98
MULTIPLY=99
DIVIDE=100
'let'=1
'type'=2
'mem'=3
'reg'=4
'var'=5
'alias'=6
'mode'=7
'op'=8
'pseudo'=9
'internal'=10
'label'=11
'struct'=12
'syntax'=13
'image'=14
'action'=15
'bool'=16
'card'=17
'fix'=18
'float'=19
'int'=20
'enum'=21
'('=25
')'=26
'{'=27
'}'=28
'['=29
']'=30
';'=31
','=32
'.'=33
'"'=34
'='=35
'+'=36
'-'=37
'*'=38
'/'=39
'%'=40
'**'=41
'<<'=42
'>>'=43
'<<<'=44
'>>>'=45
'<'=46
'>'=47
'<='=48
'>='=49
'=='=50
'!='=51
'!'=52
'if'=53
'then'=54
'else'=55
'endif'=56
'&&'=57
'||'=58
'~'=59
'&'=60
'^'=61
'|'=62
'..'=63
'...'=64
'::'=65
':'=66
'is_type'=67
'type_of'=68
'size_of'=69
'sqrt'=70
'round'=71
'is_nan'=72
'is_signaling_nan'=73
'sign_extend'=74
'zero_extend'=75
'coerce'=76
'cast'=77
'int_to_float'=78
'float_to_int'=79
'float_to_float'=80
'format'=81
'trace'=82
'exception'=83
'mark'=84
'unpredicted'=85
'undefined'=86
'assert'=87
'function'=88
'shared'=89
'@rev'=90
